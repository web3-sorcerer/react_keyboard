{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedButton","handleKeyUp","event","setState","key","document","addEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,cAAe,IAFnB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,cAAeE,EAAME,OAdzC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASC,iBAAiB,QAASC,KAAKN,eAV5C,oBAiBE,WACE,IAAQD,EAAkBO,KAAKR,MAAvBC,cAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,EAAa,mCACkBA,EADlB,KAEV,kCAzBd,GAAyBS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.8165b9ce.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  pressedButton: string;\n}\n\nexport class App extends React.Component {\n  state: State = {\n    pressedButton: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({ pressedButton: event.key });\n  };\n\n  render() {\n    const { pressedButton } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedButton\n            ? `The last pressed key is [${pressedButton}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}